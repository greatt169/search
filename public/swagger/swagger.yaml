---
swagger: '2.0'
info:
  title: Search Point REST API
  description: API для работы с фильтрацией и поиском в приложении
  version: 1.0.0
schemes:
  - http
basePath: "/api"
produces:
  - application/json

responses:
  400Error:
    description: 'Ошибочный запрос, например, отсутствует один из параметров'
    schema:
      $ref: '#/definitions/Error'
  403Error:
    description: 'Недостаточно прав для выполнения запроса'
    schema:
      $ref: '#/definitions/Error'
  404Error:
    description: 'Запрашиваемый ресурс, определяемый идентификатором, не найден'
    schema:
      $ref: '#/definitions/Error'
  409Error:
    description: 'Ресурс, создаваемый методом POST, уже существует'
    schema:
      $ref: '#/definitions/Error'
  500Error:
    description: 'Серверная ошибка'
    schema:
      $ref: '#/definitions/Error'

paths:
  "/catalog-list":
    post:
      summary: Получение списка элементов
      description: Получение списка элементов
      parameters:
        - in: query
          name: index
          required: true
          description: Код индекса
          schema:
            type: string
            example: auto
        - in: query
          name: page
          description: Номер запрашиваемой страницы результата
          minimum: 1
          type: integer
          default: 1
        - in: query
          name: pageSize
          type: integer
          default: 20
          description: Количество возвращаемых объектов на странице
        - in: body
          name: request
          required: true
          schema:
            type: object
            description: Параметры запроса
            properties:
              search:
                $ref: '#/definitions/Search'
              filter:
                $ref: '#/definitions/Filter'
              sorts:
                $ref: '#/definitions/Sorts'
              engine:
                $ref: '#/definitions/Engine'

      tags:
      - Catalog
      responses:
        200:
          description: Метод успешно отработал
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ListItems'
        400:
          $ref: '#/responses/400Error'
        403:
          $ref: '#/responses/403Error'
        404:
          $ref: '#/responses/404Error'
        500:
          $ref: '#/responses/500Error'

  "/reindex":
    post:
      summary: Индексирование данных
      description: Обновление элементов в индексе
      parameters:
        - in: body
          name: request
          required: true
          schema:
            type: object
            description: Параметры запроса
            properties:
              source:
                $ref: '#/definitions/SourceIndex'

      tags:
        - Catalog
      responses:
        200:
          description: Метод успешно отработал
          schema:
            type: string
            example: 'ok'
        400:
          $ref: '#/responses/400Error'
        403:
          $ref: '#/responses/403Error'
        404:
          $ref: '#/responses/404Error'
        500:
          $ref: '#/responses/500Error'

definitions:
  Engine:
    type: object
    description: Вид поискового движка
    required:
      - name
    properties:
      name:
        type: string
        default: elasticsearch
        example: elasticsearch
        enum: [elasticsearch, sphinx]

  Sorts:
    type: object
    description: Объект, содержащий массив правил сортировки
    required:
      - items
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Sort'

  Search:
    type: object
    description: Объект для параметров поиска
    required:
      - query
      - fields
    properties:
      query:
        type: string
        description: Строка поиска
        example: 'Polo'
      fields:
        type: array
        items:
          type: string
          minItems: 1
          example: 'model'

  Sort:
    type: object
    description: Объект соритровки на вход
    required:
      - field
      - order
    properties:
      field:
        description: Поле для сорировки
        type: string
        default: 'price'
        example: 'price'
      order:
        description: Направление для сорировки
        type: string
        default: 'asc'
        example: 'asc'
        enum: [asc, desc]

  Filter:
    type: object
    description: Объект фильтрации на вход
    required:
        - rangeParams
        - selectParams
    properties:
      rangeParams:
        type: array
        description: |
          Массив входных параметров фильтра типа range
        items:
          $ref: '#/definitions/FilterRangeParam'

      selectParams:
        type: array
        description: |
          Массив входных параметров фильтра остальных типов (checkbox, radio, select)
        items:
          $ref: '#/definitions/FilterParam'

  FilterRangeParam:
    type: object
    required:
      - code
      - values
    properties:
      code:
        type: string
        description: |
          Символьный код параметра
        example: "price"
      minValue:
        type: number
        description: |
          Минимальное значение свойства
        example: 0
      maxValue:
        type: number
        description: |
          Максимальное значение свойства
        example: 10000

  FilterParam:
    type: object
    required:
      - code
      - values
    properties:
      code:
        type: string
        description: |
          Символьный код параметра
        example: "color"
      values:
        type: array
        description: |
          Массив значений параметра
        items:
          $ref: '#/definitions/FilterValue'

  FilterValue:
    type: object
    required:
      - value
    properties:
      value:
        type: string
        description: |
          Значение свойства
        example: 'white'
  ListItems:
    type: object
    properties:
      total:
        type: integer
        example: 10
      items:
        type: array
        items:
          $ref: '#/definitions/DisplayListItem'
    description: |
      Массив элементов

  DisplayListItem:
    type: object
    description: |
      Объект элемента списка
    required:
      - id
      - attributes
    properties:
      id:
        type: string
        description: |
          Идентификатор элемента
        example: 5
      singleAttributes:
        type: array
        description: |
          Массив одиночных свойств элемента
        items:
          $ref: '#/definitions/DisplayListItemSingleAttribute'

      multipleAttributes:
        type: array
        description: |
          Массив множественных свойств элемента
        items:
          $ref: '#/definitions/DisplayListItemMultipleAttribute'

  DisplayListItemSingleAttribute:
    type: object
    required:
      - code
      - value
    properties:
      code:
        type: string
        description: |
          Код аттрибута элемента
        example: 'transmission'
      name:
        type: string
        description: |
          Название аттрибута
        example: 'Тип коробки передач'
      description:
        type: string
        description: |
          Описание аттрибута
        example: 'Произвольное описание параметра'
      img:
        type: string
        description: |
          Картинка для аттрибута
        example: 'https://cdn.fast.ru/files/1sdasd88dasdsad.jpg'
      additionalInfo:
        type: string
        description: |
          Дополнительная информация для значения аттрибута
        example: 'string'
      value:
        $ref: '#/definitions/DisplayListItemAttributeValue'

  DisplayListItemMultipleAttribute:
    type: object
    required:
      - code
      - values
    properties:
      code:
        type: string
        description: |
          Код аттрибута элемента
        example: 'transmission'
      name:
        type: string
        description: |
          Название аттрибута
        example: 'Тип коробки передач'
      description:
        type: string
        description: |
          Описание аттрибута
        example: 'Произвольное описание параметра'
      img:
        type: string
        description: |
          Картинка для аттрибута
        example: 'https://cdn.fast.ru/files/1sdasd88dasdsad.jpg'
      additionalInfo:
        type: string
        description: |
          Дополнительная информация для значения аттрибута
        example: 'string'
      values:
        type: array
        description: |
          Массив значений аттрибута
        items:
          $ref: '#/definitions/DisplayListItemAttributeValue'

  DisplayListItemAttributeValue:
    type: object
    required:
      - value
    properties:
      code:
        type: string
        description: |
          Код значения аттрибута элемента
        example: 'auto'
      description:
        type: string
        description: |
          Описание значения аттрибута
        example: 'Произвольное описание параметра'
      img:
        type: string
        description: |
          Картинка для значения аттрибута
        example: 'https://cdn.fast.ru/files/1sdasd88dasdsad.jpg'
      additionalInfo:
        type: string
        description: |
          Дополнительная информация для значения аттрибута
        example: 'string'
      value:
        type: string
        description: |
          Значение аттрибута
        example: 'АКПП'

  SourceIndex:
    type: object
    description: |
        Объект, содержащий данные для индексации
    required:
      - items
      - mapping
    properties:
      items:
        type: array
        description: |
            Массив элементов для индексации
        items:
          $ref: '#/definitions/DisplayListItem'
      mapping:
        type: object
        description: |
          Массив правил для индексации полей
        additionalProperties:
          type: object
          properties:
            type:
              type: string
              example: keyword
              enum: [keyword, text, float, integer, boolean]
      indexSettings:
        type: object
        additionalProperties: true
        description: |
          Массив настроек для индекса поиска

  Error:
    description: Описание ошибки для всех методов
    properties:
      applicationErrorCode:
        description: |
          Код ошибки, к которому привел вызов метода
        type: string
        example: 'tooManyRequests'
      debug:
        description: |
          Дополнительная отладочная информация
        type: string
        example: 'org.postgresql.util.PSQLException: ERROR: canceling statement due to user request'
      message:
        description: |
          Человекочитаемое сообщение об ошибке
        type: string
        example: 'Ошибка отправки СМС-сообщения'
    required:
      - applicationErrorCode
      - message
