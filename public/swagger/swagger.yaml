---
swagger: '2.0'
info:
  title: Search Point REST API
  description: API для работы с фильтрацией и поиском в приложении
  version: 1.0.0
schemes:
  - http
basePath: "/api"
produces:
  - application/json

responses:
  400Error:
    description: 'Ошибочный запрос, например, отсутствует один из параметров'
    schema:
      $ref: '#/definitions/Error'
  401Error:
    description: 'Требуется аутентификация'
    schema:
      $ref: '#/definitions/Error'
  403Error:
    description: 'Недостаточно прав для выполнения запроса'
    schema:
      $ref: '#/definitions/Error'
  404Error:
    description: 'Запрашиваемый ресурс, определяемый идентификатором, не найден'
    schema:
      $ref: '#/definitions/Error'
  409Error:
    description: 'Ресурс, создаваемый методом POST, уже существует'
    schema:
      $ref: '#/definitions/Error'
  500Error:
    description: 'Серверная ошибка'
    schema:
      $ref: '#/definitions/Error'

paths:
  "/catalog-list":
    post:
      summary: Получение списка элементов
      description: Получение списка элементов
      parameters:
        - in: query
          name: index
          required: true
          description: Код индекса
          schema:
            type: string
            example: auto
        - in: body
          name: request
          required: true
          schema:
            type: object
            description: Параметры запроса
            required:
              - filter
              - engine
            properties:
              engine:
                $ref: '#/definitions/Engine'
              filter:
                $ref: '#/definitions/InputFilter'
      tags:
      - Catalog
      responses:
        200:
          description: Метод успешно отработал
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ListItems'
        400:
          $ref: '#/responses/400Error'
        403:
          $ref: '#/responses/403Error'
        404:
          $ref: '#/responses/404Error'
        500:
          $ref: '#/responses/500Error'

definitions:
  Engine:
    type: object
    description: Вид поискового движка
    required:
      - name
    properties:
      name:
        type: string
        example: elasticsearch
        enum: [elasticsearch, sphinx]

  InputFilter:
    type: object
    description: Объект фильтрации на вход
    required:
        - rangeParams
        - selectParams
    properties:
      rangeParams:
        type: array
        description: |
          Массив входных параметров фильтра типа range
        items:
          $ref: '#/definitions/InputFilterRangeParam'

      selectParams:
        type: array
        description: |
          Массив входных параметров фильтра остальных типов (checkbox, radio, select)
        items:
          $ref: '#/definitions/InputFilterParam'

  InputFilterRangeParam:
    type: object
    required:
      - code
      - values
    properties:
      code:
        type: string
        description: |
          Символьный код параметра
        example: "price"
      minValue:
        type: number
        description: |
          Минимальное значение свойства
        example: 1500
      maxValue:
        type: number
        description: |
          Максимальное значение свойства
        example: 10000

  InputFilterParam:
    type: object
    required:
      - code
      - values
    properties:
      code:
        type: string
        description: |
          Символьный код параметра
        example: "colors"
      values:
        type: array
        description: |
          Массив значений параметра
        items:
          $ref: '#/definitions/InputFilterValue'

  InputFilterValue:
    type: object
    required:
      - value
    properties:
      value:
        type: string
        description: |
          Значение свойства
        example: 'white'

  OutputFilter:
      type: object
      description: Объект фильтрации на выходе
      required:
          - rangeParams
          - selectParams
      properties:
        rangeParams:
          type: array
          description: |
            Массив параметров фильтра типа range на выходе
          items:
            $ref: '#/definitions/OutputFilterRangeParam'

        selectParams:
          type: array
          description: |
            Массив параметров фильтра остальных типов (checkbox, radio, select) на выходе
          items:
            $ref: '#/definitions/OutputFilterParam'

  OutputFilterRangeParam:
    type: object
    required:
      - type
      - code
      - values
    properties:
      code:
        type: string
        description: |
          Символьный код параметра
        example: "price"
      sort:
        type: integer
        description: |
          Индекс сортировки параметра
        example: 500
      name:
        type: string
        description: |
          Название параметра
        example: 'Стоимость аренды'
      description:
        type: string
        description: |
          Описание параметра
        example: 'Произвольное описание параметра'
      img:
        type: string
        description: |
          Картинка для параметра
        example: 'https://cdn.fast.ru/files/1sdasd88dasdsad.jpg'
      additionalInfo:
        type: string
        description: |
          Дополнительная информация для параметра
        example: 'string'
      disabled:
        type: boolean
        description: |
          Значение недоступно для выбора
        example: true
      unit:
        type: string
        description: |
          Единица измерения значения свойства
        example: 'руб.'
      minValue:
        type: number
        description: |
          Минимальное значение свойства
        example: 1500
      maxValue:
        type: number
        description: |
          Максимальное значение свойства
        example: 10000
      minSelectedValue:
        type: number
        description: |
          Минимальное выбранное значение свойства
        example: 3000
      maxSelectedValue:
        type: number
        description: |
          Максимальное выбранное значение свойства
        example: 7000

  OutputFilterParam:
    type: object
    required:
      - type
      - code
      - values
    properties:
      type:
        type: string
        enum: [checkbox, radio, select]
        description: |
          Тип параметра
        example: "checkbox"
      code:
        type: string
        description: |
          Символьный код параметра
        example: "color"
      sort:
        type: integer
        description: |
          Индекс сортировки параметра
        example: 500
      name:
        type: string
        description: |
          Название значения параметра
        example: 'Цвет'
      description:
        type: string
        description: |
          Описание параметра
        example: 'Произвольное описание параметра'
      img:
        type: string
        description: |
          Картинка для параметра
        example: 'https://cdn.fast.ru/files/1sdasd88dasdsad.jpg'
      additionalInfo:
        type: string
        description: |
          Дополнительная информация для параметра
        example: 'string'
      values:
        type: array
        description: |
          Массив значений параметра
        items:
          $ref: '#/definitions/OutputFilterValue'

  OutputFilterValue:
    type: object
    required:
      - count
      - checked
      - disabled
      - value
    properties:
      count:
        type: integer
        description: |
          Количество элементов, удовлетворяющих значению
        example: 5
      checked:
        type: boolean
        description: |
          Значение параметра выбрано
        example: true
      disabled:
        type: boolean
        description: |
          Значение недоступно для выбора
        example: true
      sort:
        type: integer
        description: |
          Индекс сортировки значения
        example: 500
      name:
        type: string
        description: |
          Название значения свойства
        example: 'Красный'
      description:
        type: string
        description: |
          Описание значения параметра
        example: 'Произвольное описание параметра'
      img:
        type: string
        description: |
          Картинка для значения параметра
        example: 'https://cdn.fast.ru/files/1sdasd88dasdsad.jpg'
      additionalInfo:
        type: string
        description: |
          Дополнительная информация для значения параметра
        example: 'string'
      value:
        type: string
        description: |
          Значение свойства
        example: 'white'
  ListItems:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ListItem'
    description: |
      Массив элементов

  ListItem:
    type: object
    description: |
        Объект элемента списка
    required:
      - id
      - attributes
    properties:
      id:
        type: string
        description: |
          Идентификатор элемента
        example: 5
      attributes:
        type: object
        properties:
          single:
            type: object
            description: |
              Массив одиночных свойств элемента
            additionalProperties:
              $ref: '#/definitions/ListItemAttributeValue'
          multiple:
            type: object
            description: |
              Массив множественных свойств элемента
            additionalProperties:
              $ref: '#/definitions/ListItemMultipleAttribute'

  ListItemMultipleAttribute:
      type: object
      required:
        - id
        - values
      properties:
        values:
          type: array
          description: |
            Массив значений аттрибута
          items:
            $ref: '#/definitions/ListItemAttributeValue'

  ListItemAttributeValue:
      type: object
      required:
        - value
      properties:
        description:
          type: string
          description: |
            Описание значения аттрибута
          example: 'Произвольное описание параметра'
        img:
          type: string
          description: |
            Картинка для значения аттрибута
          example: 'https://cdn.fast.ru/files/1sdasd88dasdsad.jpg'
        additionalInfo:
          type: string
          description: |
            Дополнительная информация для значения аттрибута
          example: 'string'
        value:
          type: string
          description: |
            Значение аттрибута
          example: 'АКПП'

  Error:
    description: Описание ошибки для всех методов
    properties:
      applicationErrorCode:
        description: |
          Код ошибки, к которому привел вызов метода
        type: string
        example: 'tooManyRequests'
      debug:
        description: |
          Дополнительная отладочная информация
        type: string
        example: 'org.postgresql.util.PSQLException: ERROR: canceling statement due to user request'
      message:
        description: |
          Человекочитаемое сообщение об ошибке
        type: string
        example: 'Ошибка отправки СМС-сообщения'
    required:
      - applicationErrorCode
      - message
